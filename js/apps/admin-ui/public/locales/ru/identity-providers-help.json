{
	"redirectURI": "ID 제공자를 구성할 때 사용할 리디렉션 URI입니다.",
	"alias": "별칭은 ID 공급자를 고유하게 식별하며 리디렉션 URI를 빌드하는 데에도 사용됩니다.",
	"displayName": "ID 제공자에게 친숙한 이름입니다.",
	"clientId": "ID 제공자에 등록된 클라이언트 식별자입니다.",
	"clientSecret": "ID 공급자에 등록된 클라이언트 암호.이 필드는 볼트에서 값을 가져올 수 있으며 $ {Vault.id} 형식을 사용합니다.",
	"displayOrder": "GUI에서 제공자의 순서를 정의하는 번호입니다 (예: 로그인 페이지).가장 낮은 번호가 먼저 적용됩니다.",
	"endpoints": "서비스 공급자 엔드포인트의 구성을 보여 줍니다.",
	"useDiscoveryEndpoint": "이 설정이 활성화되면 검색 엔드포인트를 사용하여 공급자 구성을 가져옵니다.Keycloak은 엔드포인트에서 구성을 로드하고 소스에 업데이트가 있는 경우 구성을 자동으로 업데이트할 수 있습니다.",
	"discoveryEndpoint": "원격 IDP 검색 디스크립터에서 메타데이터를 가져옵니다.",
	"importConfig": "다운로드한 IDP 검색 디스크립터에서 메타데이터를 가져옵니다.",
	"passLoginHint": "login_hint를 ID 공급자에게 전달합니다.",
	"passMaxAge": "max_age를 ID 공급자에게 전달합니다.",
	"passCurrentLocale": "현재 로케일을 ID 공급자에게 ui_locales 매개변수로 전달합니다.",
	"logoutUrl": "외부 IDP에서 사용자를 로그아웃하는 데 사용할 종료 세션 엔드포인트입니다.",
	"backchannelLogout": "외부 IDP가 백채널 로그아웃을 지원하나요?",
	"disableUserInfo": "추가 사용자 정보를 얻으려면 사용자 정보 서비스 사용을 비활성화하시겠습니까?기본값은 이 OIDC 서비스를 사용하는 것입니다.",
	"userInfoUrl": "사용자 정보 URL.이는 선택 사항입니다.",
	"issuer": "응답 발행자의 발행자 식별자입니다.제공되지 않은 경우 검증이 수행되지 않습니다.",
	"scopes": "승인을 요청할 때 전송할 범위입니다.공백으로 구분된 범위 목록일 수 있습니다.기본값은 'openid'입니다.",
	"prompt": "권한 부여 서버가 최종 사용자에게 재인증 및 동의를 요청할지 여부를 지정합니다.",
	"acceptsPromptNone": "이는 ID 제공자 인증자와 함께 사용하거나 kc_idp_hint가 이 ID 공급자를 가리킬 때만 사용됩니다.클라이언트가 prompt=none 으로 요청을 보내고 사용자가 아직 인증되지 않은 경우 오류는 클라이언트에 직접 반환되지 않지만 prompt=none 인 요청은 이 ID 공급자에게 전달됩니다.",
	"validateSignature": "외부 IDP 서명의 서명 검증을 활성화/비활성화합니다.",
	"useJwksUrl": "스위치가 켜져 있는 경우 지정된 JWKS URL에서 ID 제공자 공개 키가 다운로드됩니다.이렇게 하면 ID 공급자가 새 키페어를 생성할 때 항상 새 키가 다시 다운로드되므로 유연성이 매우 뛰어납니다.스위치가 꺼져 있으면 Keycloak DB의 공개 키 (또는 인증서) 가 사용되므로 ID 제공자 키 쌍이 변경될 때 항상 새 키도 Keycloak DB로 가져와야 합니다.",
	"validatingPublicKey": "외부 IDP 서명을 확인하는 데 사용해야 하는 PEM 형식의 공개 키입니다.",
	"validatingPublicKeyId": "위에 제공된 유효성 검사 공개 키의 명시적 ID (키 ID)외부 IDP에서 지정한 키 ID와 상관없이 위 키를 항상 사용해야 하는 경우에는 비워 두고, 외부 IDP의 키 ID가 일치하는지 확인하는 용도로만 키를 사용해야 하는 경우에는 비워 두십시오.",
	"jwksUrl": "JWK 형식의 ID 제공자 키가 저장되는 URL입니다.자세한 내용은 JWK 사양을 참조하십시오.외부 키클로크 ID 공급자를 사용하는 경우, 브로커된 키클로크가 'http://broker-keycloak:8180 '에서 실행되고 해당 영역이 '테스트'인 경우 'http://broker-keycloak:8180/realms/test/protocol/openid-connect/certs '과 같은 URL을 사용할 수 있습니다.",
	"pkceEnabled": "IdP 브로커링을 위해 PKCE (키 코드 증명 교환) 를 사용하세요.",
	"pkceMethod": "사용할 PKCE 메서드",
	"allowedClockSkew": "ID 제공자 토큰을 검증할 때 허용되는 클럭 스큐 (초) 입니다.기본값은 0입니다.",
	"attributeConsumingServiceIndex": "인증 중에 요청할 속성 소비 서비스 프로파일의 인덱스입니다.",
	"attributeConsumingServiceName": "SP 메타데이터에 알릴 특성 소비 서비스 프로파일의 이름입니다.",
	"forwardParameters": "OpenID 연결/OAuth 이외의 표준 쿼리 파라미터는 초기 애플리케이션 요청에서 승인 엔드포인트로 외부 IDP로 전달됩니다.여러 매개 변수를 쉼표 (,) 로 구분하여 입력할 수 있습니다.",
	"clientAuthentication": "클라이언트 인증 방법 (https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication 참조).개인 키로 서명된 JWT의 경우 영역 개인 키가 사용됩니다.",
	"clientAssertionSigningAlg": "JWT 어설션을 클라이언트 인증으로 생성하기 위한 서명 알고리즘.개인 키 또는 클라이언트 암호를 jwt로 사용하여 JWT에 서명한 경우 필요합니다.알고리즘이 지정되지 않은 경우 다음 알고리즘이 적용됩니다.RS256 은 개인 키로 서명한 JWT의 경우에 적합합니다.HS256 은 클라이언트 시크릿의 경우 jwt로 적용됩니다.",
	"storeTokens": "사용자 인증 후 토큰을 저장해야 하는 경우 활성화/비활성화합니다.",
	"storedTokensReadable": "새 사용자가 저장된 토큰을 읽을 수 있는 경우 활성화/비활성화합니다.이렇게 하면 브로커.read-token 역할이 할당됩니다.",
	"trustEmail": "활성화된 경우 영역에 대한 검증이 활성화되어 있더라도 이 공급자가 제공한 이메일은 확인되지 않습니다.",
	"accountLinkingOnly": "true인 경우 사용자는 이 공급자를 통해 로그인할 수 없습니다.이 공급자에만 연결할 수 있습니다.이는 공급자의 로그인을 허용하고 싶지 않지만 제공자와 통합하려는 경우에 유용합니다.",
	"hideOnLoginPage": "숨겨진 경우 'kc_idp_hint' 파라미터 사용 등 명시적으로 요청한 경우에만 이 공급자에 로그인할 수 있습니다.",
	"firstBrokerLoginFlowAlias": "인증 흐름의 별칭으로, 이 ID 공급자로 처음 로그인한 후 트리거됩니다.'최초 로그인'이라는 용어는 현재 인증된 ID 공급자 계정에 연결된 Keycloak 계정이 없음을 의미합니다.",
	"postBrokerLoginFlowAlias": "인증 흐름의 별칭으로, 이 ID 공급자로 로그인할 때마다 트리거됩니다.이 ID 공급자 (예: OTP) 를 통해 인증된 각 사용자에 대한 추가 확인이 필요한 경우에 유용합니다.이 ID 공급자로 로그인한 후 추가 인증자를 트리거할 필요가 없는 경우에는 “없음”으로 두십시오.또한 인증자 구현에서는 ID 공급자가 이미 설정한 것처럼 사용자가 ClientSession에 이미 설정되어 있다고 가정해야 합니다.",
	"syncMode": "모든 매퍼를 위한 기본 동기화 모드.동기화 모드는 매퍼를 사용하여 사용자 데이터를 동기화할 시기를 결정합니다.가능한 값은 이 옵션이 도입되기 전의 동작을 유지하는 'legacy', 사용자가 이 ID 공급자에 처음 로그인할 때 사용자를 한 번만 가져오는 'import', 이 ID 공급자에 로그인할 때마다 항상 사용자를 업데이트하는 'force' 값입니다.",
	"serviceProviderEntityId": "이 SAML 서비스 공급자를 고유하게 식별하는 데 사용되는 엔티티 ID입니다.",
	"identityProviderEntityId": "수신된 SAML 어설션에 대해 발급자를 검증하는 데 사용되는 엔티티 ID입니다.비어 있는 경우 발급자 검증이 수행되지 않습니다.",
	"useEntityDescriptor": "원격 IDP SAML 엔티티 디스크립터에서 메타데이터를 가져옵니다.",
	"samlEntityDescriptor": "구성 파일에서 외부 IDP 메타데이터를 로드하거나 URL에서 다운로드할 수 있습니다.",
	"ssoServiceUrl": "인증 요청 (SAML 인증 요청) 을 보내는 데 사용해야 하는 URL입니다.",
	"singleLogoutServiceUrl": "로그아웃 요청을 보내는 데 사용해야 하는 URL입니다.",
	"nameIdPolicyFormat": "이름 식별자 형식에 해당하는 URI 참조를 지정합니다.",
	"principalType": "어설션에서 외부 사용자를 식별하고 추적하는 방법.기본값은 주체 이름ID를 사용하는 것입니다. 또는 식별 속성을 설정할 수도 있습니다.",
	"principalAttribute": "외부 사용자를 식별하는 데 사용되는 속성의 이름 또는 친숙한 이름입니다.",
	"allowCreate": "외부 ID 공급자가 보안 주체를 나타내는 새 식별자를 만들 수 있도록 허용합니다.",
	"httpPostBindingResponse": "HTTP-POST 바인딩을 사용하여 요청에 응답할지 여부를 나타냅니다.거짓인 경우 HTTP-REDIRECT 바인딩이 사용됩니다.",
	"httpPostBindingAuthnRequest": "HTTP-POST 바인딩을 사용하여 AuthnRequest를 전송해야 하는지 여부를 나타냅니다.거짓인 경우 HTTP-REDIRECT 바인딩이 사용됩니다.",
	"httpPostBindingLogout": "HTTP-POST 바인딩을 사용하여 요청에 응답할지 여부를 나타냅니다.거짓인 경우 HTTP-REDIRECT 바인딩이 사용됩니다.",
	"wantAuthnRequestsSigned": "ID 공급자가 서명된 AuthnRequest를 기대하는지 여부를 나타냅니다.",
	"signatureAlgorithm": "문서에 서명할 때 사용하는 서명 알고리즘입니다.참고로 'SHA1' 기반 알고리즘은 지원 중단되었으며 향후 제거될 수 있습니다.'*_SHA1' 대신 좀 더 안전한 알고리즘을 사용하는 것이 좋습니다.",
	"encryptionAlgorithm": "암호화 알고리즘은 SAML IDP에서 SAML 문서, 어설션 또는 ID를 암호화하는 데 사용됩니다.SAML 문서 부분의 암호 해독에 해당하는 암호 해독 키는 구성된 이 알고리즘에 따라 선택되며 암호화 (ENC) 사용을 위한 영역 키에서 사용할 수 있어야 합니다.알고리즘이 구성되지 않은 경우 지원되는 모든 알고리즘이 허용되며 SAML 문서 자체에 구성된 알고리즘에 따라 암호 해독 키가 선택됩니다.",
	"samlSignatureKeyName": "서명된 SAML 문서에는 KeyName 요소의 서명 키 ID가 포함되어 있습니다.키클로크/RH-SSO 상대방의 경우 KEY_ID를 사용하고 MS AD FS의 경우 CERT_SUBJECT를 사용하고 다른 옵션이 작동하지 않으면 NONE을 사용하십시오.",
	"wantAssertionsSigned": "이 서비스 공급자가 서명된 어설션을 기대하는지 여부를 나타냅니다.",
	"wantAssertionsEncrypted": "이 서비스 공급자가 암호화된 어설션을 기대하는지 여부를 나타냅니다.",
	"forceAuthentication": "ID 제공자가 이전 보안 컨텍스트에 의존하지 않고 발표자를 직접 인증해야 하는지 여부를 나타냅니다.",
	"validateSignatures": "SAML 응답의 서명 검증을 활성화/비활성화합니다.",
	"validatingX509Certs": "서명을 확인하는 데 사용해야 하는 PEM 형식의 인증서입니다.여러 인증서를 쉼표 (,) 로 구분하여 입력할 수 있습니다.",
	"signServiceProviderMetadata": "공급자 SAML 메타데이터의 서명을 활성화/비활성화합니다.",
	"passSubject": "로그인 단계에서 선택적 login_hint 쿼리 파라미터를 SAML AuthnRequest의 제목에 전달합니다.",
	"comparison": "요청된 컨텍스트 클래스 또는 명령문을 평가하는 데 사용되는 비교 방법을 지정합니다.기본값은 “Exact”입니다.",
	"authnContextClassRefs": "요청된 AuthnContext 클래스 참조의 정렬된 목록입니다.",
	"authnContextDeclRefs": "요청된 AuthnContext decLref의 정렬된 목록입니다.",
	"addIdpMapperName": "매퍼 이름.",
	"syncModeOverride": "이 매퍼에 대한 IDP의 기본 동기화 모드를 재정의합니다.값은 이 옵션이 도입되기 전의 동작을 유지하는 'legacy', 사용자가 이 ID 공급자에 처음 로그인할 때 사용자를 한 번만 가져오려면 'import', 이 ID 공급자에 로그인할 때마다 항상 사용자를 업데이트하는 'force', 이 매퍼의 ID 공급자에 정의된 동기화 모드를 사용하려면 '상속'입니다.",
	"advancedAttributeToRole": "속성 집합이 존재하고 일치할 수 있는 경우 사용자에게 지정된 영역 또는 클라이언트 역할을 부여하십시오.",
	"usernameTemplateImporter": "가져올 사용자 이름을 포맷합니다.",
	"hardcodedUserSessionAttribute": "공급자로부터 사용자를 가져올 때 특정 사용자 세션 속성에 값을 하드코딩합니다.",
	"externalRoleToRole": "키클로크 액세스 토큰에서 외부 역할을 찾습니다.외부 역할이 있는 경우 사용자에게 지정된 영역 또는 클라이언트 역할을 부여합니다.",
	"advancedClaimToRole": "모든 클레임이 존재하는 경우 사용자에게 지정된 영역 또는 클라이언트 역할을 부여하십시오.",
	"claimToRole": "클레임이 있는 경우 사용자에게 지정된 영역 또는 클라이언트 역할을 부여하십시오.",
	"oidcAttributeImporter": "선언된 클레임이 ID, 액세스 토큰 또는 사용자 프로필 엔드포인트에서 반환된 클레임 세트에 있는 경우 지정된 사용자 속성 또는 속성으로 가져옵니다.",
	"attributeImporter": "어설션에 선언된 SAML 속성이 있는 경우 지정된 사용자 속성 또는 속성으로 가져옵니다.",
	"hardcodedRole": "공급자로부터 사용자를 가져오면 해당 사용자에 대한 역할 매핑을 하드코딩합니다.",
	"hardcodedAttribute": "공급자로부터 사용자를 가져올 때 특정 사용자 속성에 값을 하드코딩합니다.",
	"samlAttributeToRole": "속성이 있는 경우 사용자에게 지정된 영역 또는 클라이언트 역할을 부여합니다.",
	"template": "가져올 사용자 이름의 형식을 지정하는 데 사용할 템플릿입니다.대체품은 $ {} 로 묶여 있습니다.예: '$ {ALIAS}.$ {클레임.서브} '.ALIAS는 제공자 별칭입니다.클레임.<NAME>ID 또는 액세스 토큰 클레임을 참조합니다.대체 값에 |대문자 또는 |소문자를 추가하여 대문자 또는 소문자로 변환할 수 있습니다 (예: '$ {Claim.sub | 소문자})",
	"target": "매퍼의 대상 필드입니다.LOCAL (기본값) 은 사용자 가져오기 시 로컬 데이터베이스에 저장된 사용자 이름에 변경 사항이 적용됨을 의미합니다.BROKER_ID 및 BROKER_USERNAME은 변경 사항이 각각 페더레이션 사용자 조회에 사용되는 ID 또는 사용자 이름에 저장됨을 의미합니다.",
	"userSessionAttribute": "하드코딩하려는 사용자 세션 속성의 이름",
	"userAttribute": "하드코딩하려는 사용자 속성의 이름",
	"claim": "토큰에서 검색할 클레임 이름.'를 사용하여 중첩된 클레임을 참조할 수 있습니다..', 즉 '주소. 지역'.점 (.) 을 문자 그대로 사용하려면 백슬래시 (\\.) 로 이스케이프 처리하십시오.",
	"socialProfileJSONFieldPath": "값을 가져올 소셜 공급자 사용자 프로필 JSON 데이터의 필드 경로.중첩에는 점 표기법을, 배열 인덱스에는 대괄호를 사용할 수 있습니다.예: '연락처. 주소 [0] .국가'.",
	"userAttributeValue": "하드코딩하려는 값",
	"attributeName": "어설션에서 검색할 속성의 이름입니다.이 필드를 비워 두고 대신 친숙한 이름을 지정할 수 있습니다.",
	"friendlyName": "어설션에서 검색할 수 있는 친숙한 속성 이름입니다.이 필드를 비워 두고 대신 이름을 지정할 수 있습니다.",
	"userAttributeName": "SAML 속성을 저장할 사용자 속성 이름.이메일, LastName 및 FirstName을 사용하여 이러한 사전 정의된 사용자 속성에 매핑할 수 있습니다.",
	"socialUserAttributeName": "정보를 저장하기 위한 사용자 속성 이름.",
	"attributeValue": "속성에 있어야 하는 값입니다.속성이 목록인 경우 값이 목록에 포함되어야 합니다.",
	"attributes": "토큰에서 검색할 속성의 이름 및 (regex) 값입니다.구성된 속성 이름은 SAML 속성 이름 및 속성 친화적 이름 필드에서 검색됩니다.역할을 설정하려면 지정된 모든 속성 설명이 충족되어야 합니다.속성이 배열인 경우 값이 배열에 포함되어야 합니다.속성을 여러 번 찾을 수 있는 경우 일치하는 속성을 하나만 찾으면 충분합니다.",
	"regexAttributeValues": "활성화된 경우 속성 값은 정규 표현식으로 해석됩니다.",
	"role": "모든 속성이 있는 경우 사용자에게 부여할 역할입니다.'역할 선택' 버튼을 클릭하여 역할을 찾아보거나 입력란에 해당 역할을 입력하십시오.클라이언트 역할을 참조하는 구문은 clientname.clientrole, 즉 myclient.myrole 입니다.",
	"baseUrl": "이 ID 공급자의 기본 URL을 재정의합니다.",
	"apiUrl": "이 ID 공급자의 기본 API URL을 재정의합니다.",
	"facebook": {
		"fetchedFields": "프로필 요청을 사용하여 가져올 추가 필드를 제공합니다.이것은 'ID, 이름, 이메일, 이름_이름, 마지막_이름'의 기본 세트에 추가됩니다."
	},
	"google": {
		"hostedDomain": "Google로 로그인할 때 'hd' 쿼리 매개변수를 설정합니다.Google은 이 도메인의 계정만 나열합니다.Keycloak은 반환된 ID 토큰에 이 도메인에 대한 클레임이 있는지 확인합니다.'*'를 입력하면 모든 호스팅 계정을 사용할 수 있습니다.쉼표 ', '로 구분된 도메인 목록이 지원됩니다.",
		"userIp": "Google의 사용자 정보 서비스를 호출할 때 'UserIP' 쿼리 매개변수를 설정합니다.사용자의 IP 주소를 사용합니다.Google에서 사용자 정보 서비스에 대한 액세스를 제한하는 경우에 유용합니다.",
		"offlineAccess": "Google 인증 엔드포인트로 리디렉션할 때 'access_type' 쿼리 매개변수를 '오프라인'으로 설정하여 새로 고침 토큰을 다시 받으세요.사용자가 브라우저를 사용하지 않을 때 토큰 교환을 사용하여 Google API에 액세스하기 위해 Google 토큰을 검색하려는 경우 유용합니다."
	},
	"openshift": {
		"baseUrl": "오픈시프트 온라인 API의 기본 URL"
	},
	"paypal": {
		"sandbox": "PayPal의 샌드박스 환경을 타겟팅하세요"
	},
	"stackoverflow": {
		"key": "스택 오버플로 클라이언트 등록에서 얻은 키입니다."
	},
	"linkedin": {
		"profileProjection": "프로필 요청을 위한 프로젝션 파라미터.기본 투영을 위해서는 비워 두십시오."
	}
}